package homework;

public class Class_leetcode_765 {
	public int minSwapsCouples(int[] row) {
        int n = row.length;
        build(n / 2);
        for(int i = 0; i < n; i += 2) {
        	union(row[i] / 2, row[i + 1] / 2);
        }
        return n / 2 - sets;
    }
	
	public static int MAXN = 31;
	
	public static int[] father = new int[MAXN];
	
	public static int sets;
	
	public static void build(int m) {
		for(int i = 0; i < m; i++) {
			father[i] = i;
		}
		sets = m;
	}
	
	public static int find(int i) {
		if(father[i] != i) {
			father[i] = find(father[i]);
		}
		return father[i];
	}
	
	public static void union(int x, int y) {
		int fx = find(x);
		int fy = find(y);
		if(fx != fy) {
			father[fx] = fy;
			sets--;
		}
	}
}
