class Solution {
public static int[] tasks;
	
	public static int[] workers;
	
	public static int MAXN = 50001;
	
	public static int[] deque = new int[MAXN];
	
	public static int h, t;
	
	public int maxTaskAssign(int[] ts, int[] ws, int pills, int strength) {
        
		tasks = ts;
		workers = ws;
		Arrays.sort(tasks);
		Arrays.sort(workers);
		int tsize = tasks.length;
		int wsize = workers.length;
		int ans = 0;
		for (int l = 0, r = Math.min(tsize, wsize), m; l <= r;) {
			m = (l + r) / 2;
			if (f(0, m - 1, wsize - m, wsize - 1, strength, pills)) {
				ans = m;
				l = m + 1;
			}
			else {
				r = m - 1;
			}
		}
		return ans;
    }
	
	public boolean f(int tl, int tr, int wl, int wr, int s, int pills) {
		h = t = 0;
		int count = 0;
		for (int i = wl, j = tl; i <= wr; i++) {
			for (; j <= tr && tasks[j] <= workers[i]; j++) {
				deque[t++] = j;
			}
			if (h < t && tasks[deque[h]] <= workers[i]) {
				h++;
			}
			else {
				for (; j <= tr && tasks[j] <= workers[i] + s; j++) {
					deque[t++] = j;
				}
				if (h < t) {
					count++;
					t--;
				}
				else {
					return false;
				}
			}
		}
		return count <= pills;
	}}
